'(define (hash-alg addr)
   (define (operate bits)
     (list
      (bvxor (list-ref bits 4) (list-ref bits 1))
      (bvxor (list-ref bits 8) (list-ref bits 3))
      (bvxor (list-ref bits 7) (list-ref bits 0))
      (bvxor (list-ref bits 3) (list-ref bits 9))
      (bvand (list-ref bits 13) (list-ref bits 5))))
   (let* ((bits (map (lambda (i) (bit i addr)) hash-indices))
          (bits2 (operate bits))
          (block (apply concat bits2)))
     block))
actual blocks: (2 8 27 8 31 1 16 16 20 14 6 16 8 31 5 2 8 10 22 6 2 8 24 10 14 16 12 17 13 12 8 23 24 0 14 28 14 22 26 18 31 4 28 16 14 8 0 22 3 8 19 10 8 21 8 16 30 6 28 6 17 6 8 12 15 24 30 24 17 14 2 30 7 1 16 19 30 21 22 22 8 7 16 5 18 1 22 30 10 4 3 18 24 2 12 10 18 6 8 22 23 10 19 28 11 18 12 26 9 20 17 12 14 25 25 22 14 27 24 20 6 14 26 4 28 0 6 24)
# blocks exactly matching: 15/128
actual distr: (66 35 14 13)
expected distr: (64 32 16 16)
% difference: 7.8125%
